<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bus Routes Map</title>
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css' rel='stylesheet' />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; top: 0; bottom: 0; width: 100%; }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        // Access the Mapbox access token passed from the server
        var mapboxAccessToken = '<%= mapboxAccessToken %>';

        // Initialize map with the retrieved access token
        mapboxgl.accessToken = mapboxAccessToken;
        
        // Initialize map
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [80.0772106, 12.840641], // Center the map on a default location
            zoom: 10 // Adjust the zoom level as needed
        });

        // Fetch bus routes data from server
        fetch('/routes')
            .then(response => response.json())
            .then(routesData => {
                // Define unique colors for each route
                const routeColors = ['#FF5733', '#33FF57', '#5733FF']; // Add more colors as needed

                // Add markers for bus stops with unique colors for each route
                routesData.forEach((route, index) => {
                    const color = routeColors[index % routeColors.length]; // Get a color from the routeColors array
                    route.stops.forEach(stopName => {
                        // Geocode each stop name and add marker to the map
                        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${stopName}.json?access_token=${mapboxAccessToken}`)
                            .then(response => response.json())
                            .then(data => {
                                const coordinates = data.features[0].geometry.coordinates;
                                new mapboxgl.Marker({
                                    color: color
                                })
                                .setLngLat([coordinates[0], coordinates[1]])
                                .setPopup(new mapboxgl.Popup().setHTML(`<h3>${stopName}</h3>`))
                                .addTo(map);
                            })
                            .catch(error => console.error(`Error geocoding stop ${stopName}:`, error));
                    });
                });
            })
            .catch(error => console.error('Error fetching bus routes:', error));
    </script>
</body>
</html>